{"version":3,"file":"react-push-preview.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\n\nexport type PushPreviewTarget = 'DesktopChrome' | 'DeskopFirefox' | 'DesktopMacOS' | 'MobileAndroid' | 'MobileIOS';\n\nexport interface PushPreviewProps {\n    // The name of the app (for mobile push).\n    appName?: string;\n\n    // The target platform.\n    target?: PushPreviewTarget;\n\n    // The title to be displayed.\n    title: string;\n\n    // The optional message.\n    message?: string;\n\n    // The optional sub title (iOS only).\n    subTitle?: string;\n\n    // The url to the icon.\n    iconUrl?: string;\n\n    // The url to the image.\n    imageUrl?: string;\n\n    buttons?: readonly PushPreviewButton[];\n}\n\ninterface PushPreviewButton {\n    // The label displayed to the user for the action button.\n    title: string;\n\n    // The URL of a small icon for the action button. An alternative to icons is to include emoticons or other symbols inside the title.\n    iconUrl?: string;\n}\n\nexport const PushPreview = (props: PushPreviewProps) => {\n    const {\n        appName = '',\n        title,\n        message,\n        iconUrl,\n        buttons,\n        imageUrl,\n        subTitle,\n    } = props;\n\n    return (\n        <div className='test'>\n            <Image className='image' src={imageUrl} />\n\n\n            <div>\n                <Image className='icon' src={iconUrl} fallbackSrc='https://raw.githubusercontent.com/notifo-io/notifo/main/media/logo-square.png' />\n                \n                <span>{appName || 'Your App'}</span>\n            </div>\n\n            {title &&\n                <div>{title}</div>\n            }\n\n            {subTitle &&\n                <div>{subTitle}</div>\n            }\n\n            {message &&\n                <div>{message}</div>\n            }\n\n            {buttons &&\n                <div>\n                    {buttons.map((button, i) => \n                        <div key={i}>\n                            <Image src={button.iconUrl} />\n\n                            {button.title}\n                        </div>\n                    )}\n                </div>\n            }\n        </div>\n    );\n}\n\ninterface ImageProps {\n    className?: string;\n\n    // The fallback source.\n    fallbackSrc?: string;\n\n    // The size of the icon.\n    src?: string;\n}\n\nconst Image = ({ src, fallbackSrc: fallback, className }: ImageProps) => {\n    const [isLoaded, setIsLoaded] = React.useState(false);\n    const [imageSource, setImageSource] = React.useState(src);\n\n    React.useEffect(() => {\n        setImageSource(src || fallback);\n        setIsLoaded(false);\n    }, [src, fallback]);\n\n    const setLoaded = React.useCallback(() => {\n        if (src === imageSource || !imageSource) {\n            setIsLoaded\n        }\n        setIsLoaded(true);\n    }, [imageSource, src]);\n\n    const onError = React.useCallback(() => {\n        if (fallback) {\n            setImageSource(fallback);\n        }\n    }, [fallback]);\n\n    const style = isLoaded ? {} : { display: 'none' };\n\n    return (\n        <div className={className} style={style}>\n            <img src={src} onLoad={setLoaded} onError={onError} />\n        </div>\n    );\n};"],"names":["Image","src","fallback","fallbackSrc","className","React","isLoaded","setIsLoaded","imageSource","setImageSource","setLoaded","onError","style","display","onLoad","props","appName","title","message","iconUrl","buttons","subTitle","imageUrl","map","button","i","key"],"mappings":"2FAgGMA,EAAQ,gBAAGC,IAAAA,IAAkBC,IAAbC,YAAuBC,IAAAA,YACTC,YAAe,GAAxCC,OAAUC,SACqBF,WAAeJ,GAA9CO,OAAaC,OAEpBJ,aAAgB,WACZI,EAAeR,GAAOC,GACtBK,GAAY,KACb,CAACN,EAAKC,QAEHQ,EAAYL,eAAkB,WAIhCE,GAAY,KACb,CAACC,EAAaP,IAEXU,EAAUN,eAAkB,WAC1BH,GACAO,EAAeP,KAEpB,CAACA,WAKAG,uBAAKD,UAAWA,EAAWQ,MAHjBN,EAAW,GAAK,CAAEO,QAAS,SAIjCR,uBAAKJ,IAAKA,EAAKa,OAAQJ,EAAWC,QAASA,0BArF5B,SAACI,SASpBA,EAPAC,QAAAA,aAAU,KACVC,EAMAF,EANAE,MACAC,EAKAH,EALAG,QACAC,EAIAJ,EAJAI,QACAC,EAGAL,EAHAK,QAEAC,EACAN,EADAM,gBAIAhB,uBAAKD,UAAU,QACXC,gBAACL,GAAMI,UAAU,QAAQH,IAJ7Bc,EAFAO,WASIjB,2BACIA,gBAACL,GAAMI,UAAU,OAAOH,IAAKkB,EAAShB,YAAY,kFAElDE,4BAAOW,GAAW,aAGrBC,GACGZ,2BAAMY,GAGTI,GACGhB,2BAAMgB,GAGTH,GACGb,2BAAMa,GAGTE,GACGf,2BACKe,EAAQG,KAAI,SAACC,EAAQC,UAClBpB,uBAAKqB,IAAKD,GACNpB,gBAACL,GAAMC,IAAKuB,EAAOL,UAElBK,EAAOP"}